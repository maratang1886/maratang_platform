"""
Django settings for maratang_platform project.

Generated by 'django-admin startproject' using Django 1.11.10.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import json

from django.core.exceptions import ImproperlyConfigured


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# JSON-based secrets module
with open(os.path.join(BASE_DIR, 'penn_backend', 'secrets.json')) as f:
    secrets_json = json.loads(f.read())
def get_secret(setting, secrets=secrets_json):
    """Get the secret variable or return explicit exception."""
    try:
        return secrets[setting]
    except KeyError:
        error_msg = 'Set the {0} environment variable'.format(setting)
        raise ImproperlyConfigured(error_msg)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = get_secret('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# django-cors-headers
CORS_ORIGIN_ALLOW_ALL = True


# AUTH_USER_MODEL = 'api.PennUser'


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'api.apps.ApiConfig',
    'api'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'maratang_platform.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'maratang_platform.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases
MARA_DATABASE_NAME = 'mara_database'
MARA_DATABASE_HOST = get_secret('MARA_DATABASE_HOST')
MARA_DATABASE_USER = get_secret('MARA_DATABASE_USER')
MARA_DATABASE_PASSWORD = get_secret('MARA_DATABASE_PASSWORD')
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': MARA_DATABASE_NAME,
        'USER': MARA_DATABASE_USER,
        'PASSWORD': MARA_DATABASE_PASSWORD,
        'HOST': MARA_DATABASE_HOST,
        'PORT': '3306',
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True


# AWS settings
# AWS_S3_REGION_NAME = 'ap-northeast-2'#'ap-northeast-2'  # Asia Pacific (Seoul)
# AWS_S3_BUCKET_NAME = get_secret('AWS_S3_BUCKET_NAME')   # penn-test-storage penn-prod-storage
# AWS_S3_CUSTOM_DOMAIN = '%s.s3-%s.amazonaws.com' % (AWS_S3_BUCKET_NAME, AWS_S3_REGION_NAME)
# AWS_S3_ACCESS_KEY_ID = get_secret('AWS_ACCESS_KEY_ID')
# AWS_S3_SECRET_ACCESS_KEY = get_secret('AWS_SECRET_ACCESS_KEY')


# email setting
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_USE_TLS = True
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_PORT = 587
# EMAIL_HOST_USER = get_secret('EMAIL_HOST_USER')
# EMAIL_HOST_PASSWORD = get_secret('EMAIL_HOST_PASSWORD')
# DEFAULT_FROM_EMAIL = 'Penn Investment {}'.format(get_secret('EMAIL_HOST_USER'))
#
# ADMINS = [('Penn', get_secret('EMAIL_HOST_USER'))]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')
